#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

PKG_VERSION := $(shell dpkg-parsechangelog -S Version)
PKG_DISTRIBUTION := $(shell dpkg-parsechangelog -S Distribution)
ifeq ($(PKG_DISTRIBUTION),UNRELEASED)
	PKG_DISTRIBUTION := $(shell lsb_release -cs)
endif

CMAKE_BUILD_TYPE = Release

# Set the appropriate CPU architecture.
DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
ifeq (i386,$(DEB_HOST_ARCH))
defines+=host_cpu=\"x86\"
CEF_ARCH=x86
endif
ifeq (amd64,$(DEB_HOST_ARCH))
defines+=host_cpu=\"x64\"
CEF_ARCH=x64
DISTRIB_ARGS=--x64-build
endif
ifeq (armhf,$(DEB_HOST_ARCH))
defines+=host_cpu=\"arm\" arm_use_neon=false
CEF_ARCH=arm
DISTRIB_ARGS=--arm-build
endif

# Handle parallel build options.
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
njobs=-j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

CEF_ABI := $(shell awk '/\#define CEF_VERSION_MAJOR/ { print $$3 }' include/cef_version.h )

%:
	echo "CEF_ABI=$(CEF_ABI)"
	CEF_ABI=$(CEF_ABI) dh $@ --buildsystem=cmake

override_dh_clean:
	dh_clean
	-rm -f Release/libcef$(CEF_ABI).so
	-rm -f Debug/libcef$(CEF_ABI)d.so
	-rm -rf build

override_dh_auto_configure:
	dh_auto_configure --buildsystem=cmake -- \
		-DPKG_DISTRIBUTION=$(PKG_DISTRIBUTION) \
		-DPKG_VERSION=$(PKG_VERSION) \
		-DCEF_ABI=$(CEF_ABI)

# Regular shlibs won't work for libcef.so, since it has no versions in its soname,
# so we simply make a symbols file mapping every symbol to libcef-abi-$HASH (unversioned).
override_dh_makeshlibs:
	echo "libcef$(CEF_ABI).so libcef-abi-$(CEF_ABI)" > debian/libcef$(CEF_ABI).symbols
	echo ' (regex)".*" 0' >> debian/libcef$(CEF_ABI).symbols
	echo "libcef$(CEF_ABI)d.so libcef-abi-$(CEF_ABI)" > debian/libcef$(CEF_ABI)d.symbols
	echo ' (regex)".*" 0' >> debian/libcef$(CEF_ABI)d.symbols
	dh_makeshlibs -XlibEGL.so -XlibGLESv2.so

override_dh_gencontrol:
	dh_gencontrol -- -Vcef:ABI=$(CEF_ABI)

override_dh_auto_install:
	CEF_ABI=$(CEF_ABI) dh_auto_install --buildsystem=cmake

override_dh_install:
	echo "Generate debian/libcef$(CEF_ABI).install"
	echo "usr/lib/libcef$(CEF_ABI).so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" > debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/chrome-sandbox usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/libEGL.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/libGLESv2.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/swiftshader/libEGL.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/swiftshader/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/swiftshader/libGLESv2.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/swiftshader/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/*.bin usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI).install
	echo "usr/lib/cef.rel/icudtl.dat usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI).install

	echo "Generate debian/libcef$(CEF_ABI)d.install"
	echo "usr/lib/libcef$(CEF_ABI)d.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" > debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/chrome-sandbox usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/libEGL.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/libGLESv2.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/swiftshader/libEGL.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/swiftshader/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/swiftshader/libGLESv2.so usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/swiftshader/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/*.bin usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI)d.install
	echo "usr/lib/cef.dbg/icudtl.dat usr/lib/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)/" >> debian/libcef$(CEF_ABI)d.install

	echo "Generate debian/libcef$(CEF_ABI)-dev.install"
	echo "usr/include/* usr/include/${DEB_BUILD_MULTIARCH}/cef$(CEF_ABI)" > debian/libcef$(CEF_ABI)-dev.install
	echo "usr/src/cef/CMakeLists.txt /usr/src/cef$(CEF_ABI)" >> debian/libcef$(CEF_ABI)-dev.install
	echo "usr/src/cef/cmake/* usr/src/cef$(CEF_ABI)/cmake" >> debian/libcef$(CEF_ABI)-dev.install
	echo "usr/src/cef/libcef_dll/* /usr/src/cef$(CEF_ABI)/libcef_dll" >> debian/libcef$(CEF_ABI)-dev.install
	echo "usr/lib/libcef$(CEF_ABI)_dll_wrapper.a usr/lib/${DEB_BUILD_MULTIARCH}" >> debian/libcef$(CEF_ABI)-dev.install

	echo "Generate debian/libcef$(CEF_ABI)-data.install"
	echo "usr/share/cef/Resources/* usr/share/cef$(CEF_ABI)/Resources/" > debian/libcef$(CEF_ABI)-data.install

	dh_install -O--buildsystem=cmake
